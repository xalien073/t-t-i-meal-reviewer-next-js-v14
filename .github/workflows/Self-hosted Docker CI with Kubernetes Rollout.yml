name: Self-hosted Docker CI with Kubernetes Rollout

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          timeout: '600'

      - name: Build the Docker image with a unique tag, Push the image to Docker Hub & Update next_deployment.yaml with the new image tag using PowerShell
        run: |
          $env:IMAGE_TAG="xalien073/tmr:${{ github.sha }}"
          Write-Host "Building image with tag: $env:IMAGE_TAG"
          docker build . --file Dockerfile --tag $env:IMAGE_TAG
          Write-Host "Pushing image with tag: $env:IMAGE_TAG"
          docker push $env:IMAGE_TAG
          cd C:\Users\stden\OneDrive\Desktop\prototype\Kubernetes\tmr-k8s
          Write-Host "Changed directory to tmr-k8s"
          (Get-Content next_deployment.yaml) -replace 'image:.*', "image: $env:IMAGE_TAG" | Set-Content next_deployment.yaml
          cd C:\Users\stden\OneDrive\Desktop\prototype\Kubernetes\tmr-k8s\AKS\helm\nextjs-app
          Write-Host "Changed directory to helm\nextjs-app"
          (Get-Content values.yaml) -replace 'tag:.*', "tag: ${{ github.sha }}" | Set-Content values.yaml
        shell: powershell
    
      - name: Commit and push updated next_deployment.yaml to tmr-k8s
        run: |
          cd C:\Users\stden\OneDrive\Desktop\prototype\Kubernetes\tmr-k8s
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update image tag to ${{ github.sha }}"
          git push https://${{ secrets.GH_TOKEN }}@github.com/xalien073/tmr-k8s.git main

      - name: Apply the new deployment to Minikube
        run: |
          cd C:\Users\stden\OneDrive\Desktop\prototype\Kubernetes\tmr-k8s\AKS\helm
          if (-not (kubectl get namespace tmr)) {
            kubectl create namespace tmr
          }
          helm install next-app ./nextjs-app --namespace tmr
        shell: powershell

      # - name: Apply the new deployment to Azure Kubernetes Cluster
      #   run: |
        #     az aks get-credentials --resource-group poona-student --name <CLUSTER_NAME>
      #     
